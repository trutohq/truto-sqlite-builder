name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test (Bun ${{ matrix.bun-version }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        bun-version: [1.0.x, 1.1.x, latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun ${{ matrix.bun-version }}
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run type check
        run: bun run typecheck

      - name: Run linting
        run: bun run lint

      - name: Run tests
        run: bun run test

      - name: Run tests with coverage
        run: bun run test:coverage

      - name: Upload coverage to Codecov
        if: matrix.bun-version == 'latest'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [test, security]
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build package
        run: bun run build

      - name: Publish to NPM
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
          bun run build
          npm publish --access public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
